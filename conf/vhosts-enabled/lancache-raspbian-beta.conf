server {
    #listen 80 default;
    server_name raspbian mirrordirector.raspbian.org archive.raspberrypi.org;
    access_log /srv/lancache/logs/Access/raspbian.log main;
    access_log /srv/lancache/logs/Keys/raspbian.log keys_range;
    error_log /srv/lancache/logs/Errors/raspbian.log;
    access_log /srv/lancache/logs/AccessKeys/raspbian.log new_keys_range;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;


    # Default Node
    include lancache/resolver;
    proxy_temp_path /srv/lancache/data/raspbian/tmp/ 1 2;
    #location = / {
#	proxy_pass http://$host;
    #}
    location /raspbian/dists {
        #proxy_bind lc-host-proxybind;
        proxy_ignore_headers Expires Cache-Control Set-Cookie Vary;
	proxy_hide_header ETag;
        proxy_cache_valid 206 1h;
        proxy_read_timeout 150;
        proxy_cache raspbian;
        # Proxy Cache
	include lancache/proxy-base-raspbian-1;
	
	# Only download one copy at a time and use a large timeout so
	# this really happens, otherwise we end up wasting bandwith
	# getting the file multiple times.
	proxy_cache_lock on;
	proxy_cache_lock_timeout 1h;
	
	# Allow the use of state entries
	proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
	
	# Allow caching of 200 but not 301 or 302 as our cache key may not include query params
	# hence may not be valid for all users
	proxy_cache_valid 200 1h;
	proxy_cache_valid 301 302 0;
	
	# Enable cache revalidation
	proxy_cache_revalidate on;
	
	# By-pass with nocache=1
	proxy_cache_bypass $arg_nocache;
	
	# 40G max file
	proxy_max_temp_file_size 40960m;
        include lancache/cache-range;
    }
    
     location /raspbian/pool {
        #proxy_bind lc-host-proxybind;
        proxy_ignore_headers Expires Cache-Control Set-Cookie Vary;
        proxy_hide_header ETag;
        proxy_cache_valid 206 90d;
        proxy_read_timeout 150;
        proxy_cache raspbian;
        include lancache/proxy-cache-raspbian-1;
        include lancache/cache-range;
    }
    
    location /debian/dists {
        #proxy_bind lc-host-proxybind;
        proxy_ignore_headers Expires Cache-Control Set-Cookie Vary;
        proxy_hide_header ETag;
        proxy_cache_valid 206 1h;
        proxy_read_timeout 150;
        proxy_cache raspbian;
        # Proxy Cache
        include lancache/proxy-base-raspbian-2;
	
        # Only download one copy at a time and use a large timeout so
        # this really happens, otherwise we end up wasting bandwith
        # getting the file multiple times.
        proxy_cache_lock on;
        proxy_cache_lock_timeout 1h;

        # Allow the use of state entries
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

        # Allow caching of 200 but not 301 or 302 as our cache key may not include query params
        # hence may not be valid for all users
        proxy_cache_valid 200 1h;
        proxy_cache_valid 301 302 0;

        # Enable cache revalidation
        proxy_cache_revalidate on;

        # By-pass with nocache=1
        proxy_cache_bypass $arg_nocache;

        # 40G max file
        proxy_max_temp_file_size 40960m;
        include lancache/cache-range;
    }
     location /debian/pool {
        #proxy_bind lc-host-proxybind;
        proxy_ignore_headers Expires Cache-Control Set-Cookie Vary;
        proxy_hide_header ETag;
        proxy_cache_valid 206 90d;
        proxy_read_timeout 150;
        proxy_cache raspbian;
        include lancache/proxy-cache-raspbian-2;
        include lancache/cache-range;
    }
}
